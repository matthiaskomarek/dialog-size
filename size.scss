$dialog-sizes:                0.2rem 0.5rem 0.75rem 1rem 1.2rem 1.5rem 4rem 4.5rem 5rem 10rem !default;
$dialog-sizes-base:           1rem !default;
$dialog-sizes-base-name:      medium !default;
$dialog-sizes-names:          xx-small x-small small medium large x-large xx-large !default;


@function closest ($val, $list) {
    $current: 0;
    @each $listVal in $list {
        @if (abs($val - $listVal) < abs($val - $current)) {
            $current: $listVal;
        }
    }
    @return $current;
}

@function size($size, $sizes: $dialog-sizes, $names: $dialog-sizes-names) {
  $closest: null;
  $baseIndex: 0;

  @if index($dialog-sizes, $dialog-sizes-base) {
    $baseIndex: index($dialog-sizes, $dialog-sizes-base);
  } @else {
    @error '#{$dialog-sizes-base} from $dialog-sizes-base is not contained in $dialog-sizes'
  }

  @if index($names, $size) {
    $size: index($names, $size) / length($names);
  }

  @if unitless($size) {
    @if not (($size <= 1) or ($size >= -1)) {
        @error 'if $size is unitless it must be a value between -1 and 1'
    } @else {
      // transform range from [-1,1] to [0,1]
      $size: ($size + 1) / 2;
      $closest: nth($sizes, max(1, round(length($sizes) * $size)) );
    }
  }@else{
    $closest: closest($size, $sizes);
  }

  @if ( $closest != $size) {
    @warn '#{$size} is not contained in $sizes the closest value: #{$closest} will be used';
  }

  @return $closest;
}

body {
  padding: size(1);
  margin: size(-1);
  border: size(-.2) solid red;
}
